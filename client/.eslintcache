[{"/media/tyagi/Imp/Dev/Placement Task/DATAGROKR/client/src/index.js":"1","/media/tyagi/Imp/Dev/Placement Task/DATAGROKR/client/src/App.js":"2","/media/tyagi/Imp/Dev/Placement Task/DATAGROKR/client/src/components/includes/header.js":"3","/media/tyagi/Imp/Dev/Placement Task/DATAGROKR/client/src/components/includes/blog.js":"4","/media/tyagi/Imp/Dev/Placement Task/DATAGROKR/client/src/components/Profile/profile.js":"5","/media/tyagi/Imp/Dev/Placement Task/DATAGROKR/client/src/components/Homepage/homepage.js":"6","/media/tyagi/Imp/Dev/Placement Task/DATAGROKR/client/src/components/Notification/notify.js":"7","/media/tyagi/Imp/Dev/Placement Task/DATAGROKR/client/src/components/Notification/card.js":"8","/media/tyagi/Imp/Dev/Placement Task/DATAGROKR/client/src/components/Login/Login.js":"9","/media/tyagi/Imp/Dev/Placement Task/DATAGROKR/client/src/components/Signup/Signup.js":"10","/media/tyagi/Imp/Dev/Placement Task/DATAGROKR/client/src/components/Blog/upload.js":"11","/media/tyagi/Imp/Dev/Placement Task/DATAGROKR/client/src/components/Blog/Details.js":"12","/media/tyagi/Imp/Dev/Placement Task/DATAGROKR/client/src/components/includes/footer.js":"13"},{"size":145,"mtime":1606562893335,"results":"14","hashOfConfig":"15"},{"size":1094,"mtime":1606836925722,"results":"16","hashOfConfig":"15"},{"size":8291,"mtime":1606712209793,"results":"17","hashOfConfig":"15"},{"size":3965,"mtime":1606921442057,"results":"18","hashOfConfig":"15"},{"size":1709,"mtime":1606846963587,"results":"19","hashOfConfig":"15"},{"size":617,"mtime":1606921048307,"results":"20","hashOfConfig":"15"},{"size":835,"mtime":1606718702941,"results":"21","hashOfConfig":"15"},{"size":2633,"mtime":1606714347424,"results":"22","hashOfConfig":"15"},{"size":5188,"mtime":1606718961308,"results":"23","hashOfConfig":"15"},{"size":4599,"mtime":1606718943808,"results":"24","hashOfConfig":"15"},{"size":10344,"mtime":1606854921394,"results":"25","hashOfConfig":"15"},{"size":8776,"mtime":1606848533286,"results":"26","hashOfConfig":"15"},{"size":1379,"mtime":1606846885218,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"5uy03c",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/media/tyagi/Imp/Dev/Placement Task/DATAGROKR/client/src/index.js",[],["60","61"],"/media/tyagi/Imp/Dev/Placement Task/DATAGROKR/client/src/App.js",[],"/media/tyagi/Imp/Dev/Placement Task/DATAGROKR/client/src/components/includes/header.js",["62"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom'\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport ModeCommentIcon from '@material-ui/icons/ModeComment';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport OfflineBoltIcon from '@material-ui/icons/OfflineBolt';\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n    },\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    },\n  },\n  link: {\n    color: '#fff',\n    textDecoration: 'none'\n  }\n}));\n\nfunction HeaderBar() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const handleProfileMenuOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleMobileMenuOpen = (event) => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'right', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <Link className={classes.link} to={'/profile'}>\n        <MenuItem>My Profile</MenuItem>\n      </Link>\n      <Link className={classes.link} to={'/login'}>\n        <MenuItem>Login</MenuItem>\n      </Link>\n      <Link className={classes.link} to={'/logout'}>\n        <MenuItem>Logout</MenuItem>\n      </Link>\n      <Link className={classes.link} to={'/signup'}>\n        <MenuItem>Signup</MenuItem>\n      </Link>\n    </Menu>\n  );\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      <Link className={classes.link} to={'/notification?type=impressions'}>\n        <MenuItem>\n          <IconButton aria-label=\"show 4 new Comments\" color=\"inherit\">\n            <Badge badgeContent={4} color=\"secondary\">\n              <ModeCommentIcon />\n            </Badge>\n          </IconButton>\n          <p>Comments</p>\n        </MenuItem>\n      </Link>\n      <Link className={classes.link} to={'/notification?type=impressions'}>\n        <MenuItem >\n          <IconButton aria-label=\"show 11 new Likes\" color=\"inherit\">\n            <Badge badgeContent={11} color=\"secondary\">\n              <FavoriteIcon />\n            </Badge>\n          </IconButton>\n          <p>Likes</p>\n        </MenuItem>\n      </Link>\n      <Link className={classes.link} to={'/notification?type=impressions'}>\n        <MenuItem>\n          <IconButton aria-label=\"show 4 new Insights\" color=\"inherit\">\n            <Badge badgeContent={4} color=\"secondary\">\n              <OfflineBoltIcon />\n            </Badge>\n          </IconButton>\n          <p></p>\n        </MenuItem>\n      </Link>\n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <AccountCircle />\n        </IconButton>\n        <p>Profile</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <>\n      <div className={classes.grow}>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <Typography className={classes.title} variant=\"h6\" noWrap\n              onClick={() => window.location.replace('/')}>\n              Welcome DATAGROKRian\n          </Typography>\n            <div className={classes.search}>\n              <div className={classes.searchIcon}>\n                <SearchIcon />\n              </div>\n              <InputBase\n                placeholder=\"Search…\"\n                classes={{\n                  root: classes.inputRoot,\n                  input: classes.inputInput,\n                }}\n                inputProps={{ 'aria-label': 'search' }}\n              />\n            </div>\n            <div className={classes.grow} />\n            <div className={classes.sectionDesktop}>\n              <Link className={classes.link} to={'/notification?type=comments'}>\n                <IconButton aria-label=\"show 4 new Comments\" color=\"inherit\">\n                  <Badge badgeContent={4} color=\"secondary\">\n                    <ModeCommentIcon />\n                  </Badge>\n                </IconButton>\n              </Link>\n              <Link className={classes.link} to={'/notification?type=likes'}>\n                <IconButton aria-label=\"show 17 new Likes\" color=\"inherit\">\n                  <Badge badgeContent={17} color=\"secondary\">\n                    <FavoriteIcon />\n                  </Badge>\n                </IconButton>\n              </Link>\n              <Link className={classes.link} to={'/notification?type=impressions'}>\n                <IconButton aria-label=\"show 4 new Impressive\" color=\"inherit\">\n                  <Badge badgeContent={17} color=\"secondary\">\n                    <OfflineBoltIcon />\n                  </Badge>\n                </IconButton>\n              </Link>\n              <IconButton\n                edge=\"end\"\n                aria-label=\"account of current user\"\n                aria-controls={menuId}\n                aria-haspopup=\"true\"\n                onClick={handleProfileMenuOpen}\n                color=\"inherit\"\n              >\n                <AccountCircle />\n              </IconButton>\n            </div>\n            <div className={classes.sectionMobile}>\n              <IconButton\n                aria-label=\"show more\"\n                aria-controls={mobileMenuId}\n                aria-haspopup=\"true\"\n                onClick={handleMobileMenuOpen}\n                color=\"inherit\"\n              >\n                <MoreIcon />\n              </IconButton>\n            </div>\n          </Toolbar>\n        </AppBar>\n        {renderMobileMenu}\n        {renderMenu}\n      </div>\n    </>\n  );\n}\n\nexport default HeaderBar","/media/tyagi/Imp/Dev/Placement Task/DATAGROKR/client/src/components/includes/blog.js",[],"/media/tyagi/Imp/Dev/Placement Task/DATAGROKR/client/src/components/Profile/profile.js",[],["63","64"],"/media/tyagi/Imp/Dev/Placement Task/DATAGROKR/client/src/components/Homepage/homepage.js",[],"/media/tyagi/Imp/Dev/Placement Task/DATAGROKR/client/src/components/Notification/notify.js",["65"],"import React, { useState } from 'react'\nimport { withRouter, Redirect } from 'react-router-dom'\n\nimport NotiCard from './card'\nimport HeaderBar from '../includes/header'\n\nfunction Notify(props) {\n  const [redirectUrl, setRedirect] = useState(null)\n  let type = new URLSearchParams(props.location.search).get('type')\n\n  return (\n    <>{(redirectUrl) ?\n      <Redirect to={redirectUrl} /> :\n      <>\n        <div><HeaderBar></HeaderBar>\n          {(() => {\n            switch (type) {\n              case \"comments\": return <NotiCard react={type} />\n              case \"likes\": return <NotiCard react={type} />\n              case \"impressions\": return <NotiCard react={type} />\n              default: return <p>Nothing is Here</p>;\n            }\n          })()}\n        </div>\n      </>}\n    </>\n  )\n}\n\nexport default withRouter(Notify)\n\n","/media/tyagi/Imp/Dev/Placement Task/DATAGROKR/client/src/components/Notification/card.js",[],"/media/tyagi/Imp/Dev/Placement Task/DATAGROKR/client/src/components/Login/Login.js",["66","67","68","69"],"import React, { useState, useEffect } from 'react';\nimport { Link, withRouter, Redirect } from 'react-router-dom'\n// import axios from 'axios'\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Grid from '@material-ui/core/Grid';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  link: {\n    color: '#fff',\n    textDecoration: 'none'\n  }\n}));\n\nfunction Login(props) {\n  const classes = useStyles();\n  let [username, setUsername] = useState()\n  let [pwd, setPwd] = useState()\n  let [snackOpen, setSnackOpen] = useState(false)\n  let [msg, setMsg] = useState('')\n  const [login, setLogin] = React.useState(false)\n\n  useEffect(() => {\n    // axios.get('/user/login')\n    //   .then(res => {\n    //     if (res.data.status === 1) {\n    //       alert(res.data.msg)\n    //       setLogin(true)\n    //     }\n    //   })\n  }, [])\n\n  const signIn = () => {\n    // axios.post('/user/login', {\n    //   uname: username, upwd: pwd\n    // }).then(res => {\n    //   setMsg(res.data.msg)\n    //   setSnackOpen(true);\n    //   if (res.data.status === 200) {\n    //     setLogin(true)\n    //     setTimeout(() => { props.history.push('/') }, 2000)\n    //   }\n    //   else {\n    //     setLogin(false)\n    //   }\n    // })\n  }\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setSnackOpen(false);\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      {(login) ?\n        <Redirect to='/' /> :\n        <>\n          <Link className={classes.link} to={`/`} style={{ position: 'absolute', fontSize: '1em', left: '30px', top: '20px' }}>\n            <ArrowBackIcon /></Link>\n          <CssBaseline />\n          <div className={classes.paper}>\n            <Avatar className={classes.avatar}>\n              <LockOutlinedIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n              Sign in\n        </Typography>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"username\"\n              label=\"Username\"\n              name=\"username\"\n              autoComplete=\"username\"\n              autoFocus\n              onChange={(e) => setUsername(e.target.value)}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              onChange={(e) => setPwd(e.target.value)}\n            />\n            <FormControlLabel\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\n              label=\"Remember me\"\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              onClick={signIn}\n            >\n              Sign In\n          </Button>\n            <Grid container>\n              <Grid item xs>\n                <Link className={classes.link} to={'#'} variant=\"body2\">\n                  Forgot password?\n              </Link>\n              </Grid>\n              <Grid item>\n                <span>Don't have an account?</span>\n                <Link className={classes.link} to={'/user/signup'} variant=\"body2\"> Sign Up\n              </Link>\n              </Grid>\n            </Grid>\n          </div>\n\n          {/* snack bar */}\n          <Snackbar\n            anchorOrigin={{\n              vertical: 'bottom',\n              horizontal: 'left',\n            }}\n            open={snackOpen}\n            message={msg}\n            autoHideDuration={6000}\n            action={\n              <React.Fragment>\n                <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\n                  <CloseIcon fontSize=\"small\" />\n                </IconButton>\n              </React.Fragment>\n            }\n          />\n        </>\n      }\n    </Container>\n  );\n}\n\nexport default withRouter(Login) ","/media/tyagi/Imp/Dev/Placement Task/DATAGROKR/client/src/components/Signup/Signup.js",["70","71","72","73"],"import React, { useState } from 'react';\n// import axios from 'axios'\nimport { Link, withRouter } from 'react-router-dom'\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack'\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  link: {\n    color: '#fff',\n    textDecoration: 'none'\n  }\n}));\n\nfunction Signup(props) {\n  const classes = useStyles();\n  let [name, setName] = useState()\n  let [username, setUsername] = useState()\n  let [pwd, setPwd] = useState()\n  let [snackOpen, setSnackOpen] = useState(false)\n  let [msg, setMsg] = useState('')\n\n  const signUp = () => {\n    // axios.post('/user/signup', {\n    //   uname: name, username: username, upwd: pwd\n    // }).then(res => {\n    //   setMsg(res.data.msg)\n    //   setSnackOpen(true);\n    //   if (res.data.status === 200)\n    //     setTimeout(() => { props.history.push('/') }, 2000)\n    // })\n  }\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setSnackOpen(false);\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <Link className={classes.link}  to={`/`} style={{ position: 'absolute', fontSize: '1em', left: '30px', top: '20px' }}>\n        <ArrowBackIcon /></Link>\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <TextField\n              autoComplete=\"fullname\"\n              name=\"fullName\"\n              variant=\"outlined\"\n              required\n              fullWidth\n              id=\"fullName\"\n              label=\"Full Name\"\n              onChange={(e) => setName(e.target.value)}\n              autoFocus\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              variant=\"outlined\"\n              required\n              fullWidth\n              id=\"username\"\n              label=\"Username\"\n              name=\"username\"\n              autoComplete=\"username\"\n              onChange={(e) => setUsername(e.target.value)}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              variant=\"outlined\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              onChange={(e) => setPwd(e.target.value)}\n            />\n          </Grid>\n        </Grid>\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n          onClick={signUp}\n        >\n          Sign Up\n          </Button>\n        <Grid container justify=\"flex-end\">\n          <Grid item>\n            <Link className={classes.link}  to={'/user/login'} variant=\"body2\">\n              Already have an account? Sign in\n              </Link>\n          </Grid>\n        </Grid>\n      </div>\n      {/* snack bar */}\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n        open={snackOpen}\n        message={msg}\n        autoHideDuration={6000}\n        action={\n          <React.Fragment>\n            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\n              <CloseIcon fontSize=\"small\" />\n            </IconButton>\n          </React.Fragment>\n        }\n      />\n    </Container>\n  );\n}\n\nexport default withRouter(Signup)","/media/tyagi/Imp/Dev/Placement Task/DATAGROKR/client/src/components/Blog/upload.js",[],"/media/tyagi/Imp/Dev/Placement Task/DATAGROKR/client/src/components/Blog/Details.js",[],"/media/tyagi/Imp/Dev/Placement Task/DATAGROKR/client/src/components/includes/footer.js",[],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":1,"column":17,"nodeType":"80","messageId":"81","endLine":1,"endColumn":25},{"ruleId":"74","replacedBy":"82"},{"ruleId":"76","replacedBy":"83"},{"ruleId":"78","severity":1,"message":"84","line":8,"column":23,"nodeType":"80","messageId":"81","endLine":8,"endColumn":34},{"ruleId":"78","severity":1,"message":"85","line":47,"column":8,"nodeType":"80","messageId":"81","endLine":47,"endColumn":16},{"ruleId":"78","severity":1,"message":"86","line":48,"column":8,"nodeType":"80","messageId":"81","endLine":48,"endColumn":11},{"ruleId":"78","severity":1,"message":"87","line":50,"column":13,"nodeType":"80","messageId":"81","endLine":50,"endColumn":19},{"ruleId":"78","severity":1,"message":"88","line":51,"column":17,"nodeType":"80","messageId":"81","endLine":51,"endColumn":25},{"ruleId":"78","severity":1,"message":"89","line":45,"column":8,"nodeType":"80","messageId":"81","endLine":45,"endColumn":12},{"ruleId":"78","severity":1,"message":"85","line":46,"column":8,"nodeType":"80","messageId":"81","endLine":46,"endColumn":16},{"ruleId":"78","severity":1,"message":"86","line":47,"column":8,"nodeType":"80","messageId":"81","endLine":47,"endColumn":11},{"ruleId":"78","severity":1,"message":"87","line":49,"column":13,"nodeType":"80","messageId":"81","endLine":49,"endColumn":19},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar",["90"],["91"],"'setRedirect' is assigned a value but never used.","'username' is assigned a value but never used.","'pwd' is assigned a value but never used.","'setMsg' is assigned a value but never used.","'setLogin' is assigned a value but never used.","'name' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]